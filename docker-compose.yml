version: "3.9"

services:
    client:
        container_name: prakticum-client
        image: prakticum-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
              CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports:
            - "80:${CLIENT_PORT}"
        environment:
            - CLIENT_PORT=${CLIENT_PORT}
            - EXTERNAL_SERVER_URL=${EXTERNAL_SERVER_URL}
            - INTERNAL_SERVER_URL=${INTERNAL_SERVER_URL}
    postgres:
        image: postgres:14
        container_name: local_pgdb
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - pgdata:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
            interval: 1s
            timeout: 1s
            retries: 10

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:4.18
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: secret
            PGADMIN_LISTEN_PORT: 80
        ports:
            - "5050:80"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - postgres
    server:
        container_name: prakticum-server
        image: prakticum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PORT: ${POSTGRES_PORT}
            POSTGRES_HOST: ${POSTGRES_HOST}
        networks:
            - awesome
    nginx:
        container_name: nginx
        image: practicum-nginx
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        restart: always
        depends_on:
            - postgres
            - server
            - client
volumes:
    pgdata:
    pgadmin-data:

networks:
    default:
        driver: bridge

